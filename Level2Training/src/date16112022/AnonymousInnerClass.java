package date16112022;

abstract class Person{
	abstract void eat();
}
public class AnonymousInnerClass {
	public static void main(String args[])
	{
		Person p = new Person(){                          //Here we are creating anonymous innerclass 
			void eat()                                    //that extends Person abstract class
			{                                             //here p is an object of anonymous innerclass
				System.out.println("person is eating");
			}
		};
		p.eat();                                          //using anonymous innerclass object we are calling
		                                                  //eat method of anonymous inner class.
	}

}

//Person p=new Person(){  
//void eat(){System.out.println("nice fruits");}  
//};  
//A class is created, but its name is decided by the compiler, which extends the Person class 
//and provides the implementation of the eat() method.An object of the Anonymous class is 
//created that is referred to by 'p,' a reference variable of Person type.
//Internal class generated by compiler
//import java.io.PrintStream;  
//static class TestAnonymousInner$1 extends Person  
//{  
//   TestAnonymousInner$1(){}  
//   void eat()  
//    {  
//        System.out.println("nice fruits");  
//    }  
//}  